// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: file_server.proto

package server

import (
	"context"

	"file_server/api/v1/file_server"
	"file_server/internal/logic"
	"file_server/internal/svc"
)

type FileServiceServer struct {
	svcCtx *svc.ServiceContext
	file_server.UnimplementedFileServiceServer
}

func NewFileServiceServer(svcCtx *svc.ServiceContext) *FileServiceServer {
	return &FileServiceServer{
		svcCtx: svcCtx,
	}
}

// 上传文件的RPC方法
func (s *FileServiceServer) UploadUserAvatar(ctx context.Context, in *file_server.UploadAvatarRequest) (*file_server.UploadAvatarResponse, error) {
	l := logic.NewUploadUserAvatarLogic(ctx, s.svcCtx)
	return l.UploadUserAvatar(in)
}

func (s *FileServiceServer) GetUserAvatarUrl(ctx context.Context, in *file_server.GetAvatarUrlRequest) (*file_server.GetAvatarUrlResponse, error) {
	l := logic.NewGetUserAvatarUrlLogic(ctx, s.svcCtx)
	return l.GetUserAvatarUrl(in)
}

func (s *FileServiceServer) UploadActivityAvatar(ctx context.Context, in *file_server.UploadAvatarRequest) (*file_server.UploadAvatarResponse, error) {
	l := logic.NewUploadActivityAvatarLogic(ctx, s.svcCtx)
	return l.UploadActivityAvatar(in)
}

func (s *FileServiceServer) GetActivityAvatarUrl(ctx context.Context, in *file_server.GetAvatarUrlRequest) (*file_server.GetAvatarUrlResponse, error) {
	l := logic.NewGetActivityAvatarUrlLogic(ctx, s.svcCtx)
	return l.GetActivityAvatarUrl(in)
}
